Grading at 10/15/2018:19:10:38.311432
For commit ID ecc729561fa23eb048ef1225c76dc8a9d35a64b5
Good for you: you committed election.h
election.c exists (good)
Starting by grading FUNCTIONALITY (90% of grade)
Attempting to compile election.c
rm -f *~ printStates printEVotes printRecounts printLargeWin
gcc -ggdb3 -Wall -Werror -std=gnu99 election.c printStates.o -o printStates
gcc -ggdb3 -Wall -Werror -std=gnu99 election.c printEVotes.o -o printEVotes
gcc -ggdb3 -Wall -Werror -std=gnu99 election.c printRecounts.o -o printRecounts
gcc -ggdb3 -Wall -Werror -std=gnu99 election.c printLargeWin.o -o printLargeWin
#################################################
testcase1 of step1:
testcase1 passed [1/1]
#################################################
testcase2 of step1:
testcase2 passed [1/1]
#################################################
testcase3 of step1:
testcase3 passed [1/1]
#################################################
testcase4 of step1:
testcase4 passed [1/1]
#################################################
testcase5 of step1:
Your file matched the expected output
testcase5 passed [10/10]
#################################################
testcase6 of step1:
Difficult corner cases
Line_52_did_not_match
Line_53_did_not_match
Line_54_did_not_match
Line_55_did_not_match
Your file did not match the expected ouput
testcase6 failed, your output did not match with the answer [0/6]
#################################################
testcase1 of step2:
Your output is correct [8/8]
#################################################
testcase2 of step2:
Your output is correct [8/8]
#################################################
testcase3 of step2:
Your output is correct [8/8]
#################################################
testcase4 of step2:
Difficult corner cases
Your output is correct [6/6]
#################################################
testcase1 of step3:
Your output is incorrect [0/6]
#################################################
testcase2 of step3:
Your output is incorrect [0/6]
#################################################
testcase3 of step3:
Your output is incorrect [0/6]
#################################################
testcase4 of step3:
Difficult corner cases
Your output is incorrect [0/2]
#################################################
testcase1 of step4:
Your output is correct [8/8]
#################################################
testcase2 of step4:
Your output is correct [8/8]
#################################################
testcase3 of step4:
Your output is correct [8/8]
#################################################
testcase4 of step4:
Difficult corner cases
Your output is correct [6/6]
Functionality grade: 74 %
This counts for 90% so you get 0.9 * 74 => 66.6 points
--------------------------------------
Style grade (10% of overall)
Abstraction of finding a colon:  0.75 / 2
Abstraction of converting a string to a number: 2 / 2
Comments: 1.75 / 2
Variable naming: 2 / 2
Other (no global variables, no magic numbers, no strange casts etc)  1.75 / 2
The comments from the  TA who graded this were:
Nice try dealing with parsing without duplicate code, would be better if you try to deal with the problem with more abstraction, and even better if you use strchr to search for ':' and parse. Nice try to use atoi but think about the data type in the problem and wouldn't strtoul do a better job? The comments you have are good overall, but not enough (see 13.2.4 Commenting/Documentation). You should be consistent in naming your variables (someName or some_name) For error handling, use fprintf(stderr...) instead. (-0.25)
-------------------------------------------------
Style total 8.25 / 10 


Overall grade is 66.6  + 8.25 = 74.85

Overall Grade: 74.85
